import{d as defineComponent,s as inject,r as ref,c as resolveComponent,o as openBlock,e as createElementBlock,j as createVNode,i as withCtx,k as createTextVNode,m as toDisplayString,v as get,x as defHttp,y as useMessage,z as useDesign,A as computed,B as createCommentVNode,F as Fragment,f as renderList,h as createBlock,C as normalizeClass,D as unref}from"./index.js";const _sfc_main$1=defineComponent({__name:"GButton",props:{btn:{type:Object,required:!0}},setup(__props){const props=__props,formActions=inject("formActions"),pluginInfo=inject("pluginInfo"),loading=ref(!1),{createMessage:$message,createConfirmSync:createConfirmSync}=useMessage();function onClick(){return __this=this,__arguments=null,generator=function*(){var _a;const{btn:btn}=props;if(!btn.action)return void $message.warn("按钮缺少 action 参数");let flag=!0;if(btn.confirm&&(flag=yield createConfirmSync(btn.confirm)),!flag)return;const args=[];if(Array.isArray(btn.args)){const values=null==formActions?void 0:formActions.getFieldsValue();for(const arg of btn.args)if("string"==typeof arg){let result=arg;const matches=arg.matchAll(/#{([^}]+)}/g);for(const match of matches){const key=match[1],value=get(values,key);result=result.replace(match[0],null!=(_a=null==value?void 0:value.toString())?_a:"")}args.push(result)}else args.push(arg)}try{loading.value=!0;let result=yield defHttp.post({url:`/plugin/do/${null==pluginInfo?void 0:pluginInfo.name}/action`,params:{action:btn.action,args:args}},{isTransformResponse:!1});result.ok?$message.success(result.message):$message.error(result.message)}catch(e){console.error(e),$message.error("操作失败，请查看前端控制台")}finally{loading.value=!1}},new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));var __this,__arguments,generator}return(_ctx,_cache)=>{const _component_a_button=resolveComponent("a-button");return openBlock(),createElementBlock("span",null,[createVNode(_component_a_button,{type:__props.btn.type,preIcon:__props.btn.icon,loading:loading.value,size:__props.btn.size,block:__props.btn.block,danger:__props.btn.danger,shape:__props.btn.shape,ghost:__props.btn.ghost,disabled:__props.btn.disabled,class:"button-item",onClick:onClick},{default:withCtx((()=>[createTextVNode(toDisplayString(__props.btn.label),1)])),_:1},8,["type","preIcon","loading","size","block","danger","shape","ghost","disabled"])])}}}),_hoisted_1={key:0,class:"error-tip"},_sfc_main=defineComponent({__name:"GButtons",props:{spaceSize:{type:Number,default:8},buttons:{type:Array,required:!0}},setup(__props){const props=__props,{prefixCls:prefixCls}=useDesign("g-buttons"),errorTip=ref(""),getButtons=computed((()=>{const{buttons:buttons}=props;return function(buttons){if(!Array.isArray(buttons))return errorTip.value="按钮格式不正确",!1;return!0}(buttons)?buttons:[]}));return(_ctx,_cache)=>{const _component_a_tooltip=resolveComponent("a-tooltip"),_component_a_space=resolveComponent("a-space");return openBlock(),createElementBlock("div",{class:normalizeClass([unref(prefixCls)])},[errorTip.value?(openBlock(),createElementBlock("div",_hoisted_1,toDisplayString(errorTip.value),1)):createCommentVNode("",!0),createVNode(_component_a_space,{size:__props.spaceSize},{default:withCtx((()=>[(openBlock(!0),createElementBlock(Fragment,null,renderList(getButtons.value,((btn,index)=>(openBlock(),createElementBlock(Fragment,{key:index},[btn.tooltip?(openBlock(),createBlock(_component_a_tooltip,{key:0,title:btn.tooltip.title,placement:btn.tooltip.placement},{default:withCtx((()=>[createVNode(_sfc_main$1,{btn:btn},null,8,["btn"])])),_:2},1032,["title","placement"])):(openBlock(),createBlock(_sfc_main$1,{key:1,btn:btn},null,8,["btn"]))],64)))),128))])),_:1},8,["size"])],2)}}});export{_sfc_main as default};
